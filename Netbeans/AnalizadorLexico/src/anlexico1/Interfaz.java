/*
 * Clase donde se establece el codigo de la interfaz grafica
 * Esta clase se ejecuta cada vez que se quiera hacer el analisis lexico
 */
package anlexico1;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.Reader;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author Laura Ojeda & Daniel Velasquez
 */
public class Interfaz extends javax.swing.JFrame {

    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
        initComponents();
        this.getContentPane().setBackground(Color.black);
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonAnalizar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textOutput = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        textAreaInput = new javax.swing.JTextArea();
        labelInput = new javax.swing.JLabel();
        labelOutput = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 0, 0));
        setForeground(java.awt.Color.black);

        buttonAnalizar.setBackground(new java.awt.Color(255, 255, 255));
        buttonAnalizar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        buttonAnalizar.setForeground(new java.awt.Color(51, 51, 0));
        buttonAnalizar.setText("Analizar");
        buttonAnalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAnalizarActionPerformed(evt);
            }
        });

        textOutput.setBackground(new java.awt.Color(0, 153, 153));
        textOutput.setColumns(20);
        textOutput.setForeground(new java.awt.Color(255, 255, 255));
        textOutput.setRows(5);
        jScrollPane1.setViewportView(textOutput);

        textAreaInput.setBackground(new java.awt.Color(255, 102, 102));
        textAreaInput.setColumns(20);
        textAreaInput.setForeground(new java.awt.Color(255, 255, 255));
        textAreaInput.setRows(5);
        jScrollPane2.setViewportView(textAreaInput);

        labelInput.setBackground(new java.awt.Color(255, 255, 255));
        labelInput.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        labelInput.setForeground(new java.awt.Color(255, 255, 255));
        labelInput.setText("Input (Entrada):");

        labelOutput.setBackground(new java.awt.Color(255, 255, 255));
        labelOutput.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        labelOutput.setForeground(new java.awt.Color(255, 255, 255));
        labelOutput.setText("Output (Salida):");

        jLabel1.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        jLabel1.setText("ANALIZADOR LEXICO");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(79, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelInput)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(buttonAnalizar))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel1)))))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelOutput)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelInput)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(160, 160, 160)
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(buttonAnalizar))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelOutput)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Clase que establece el boton Analizar y su funcionamiento
     */
    private void buttonAnalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAnalizarActionPerformed
        //Se establece un archivo input.txt
        File archivo = new File("input.txt");
        PrintWriter escribir;
        try {
            escribir = new PrintWriter(archivo);
            //Se obtiene el texto ingresado en el area de texto para ser escrito en el archivo input.txt
            escribir.print(textAreaInput.getText());
            escribir.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            //Se lee el archivo input.txt donde viene almacenada la info ingresada
            Reader lector = new BufferedReader(new FileReader("input.txt"));
            //Se manda la info a Lexer
            Lexer lexer = new Lexer(lector);
            String result = "";
            //Ciclo para analizar el texto
            while (true) {
                //Se obtienen los tokens de la clase Tokens
                Tokens tokens = lexer.yylex();
                //Si se llega al final del texto ingresado
                if (tokens == null) {
                    result += "\n";
                    //Se muestraÂ´por el area de texto de salida el resultado
                    textOutput.setText(result);
                    return;
                }
                //Dependiendo del token analizado
                switch (tokens) {
                    //En caso de que el simbolo no este registrado en el lexxer
                    case ERROR:
                        result += "Simbolo no definido\n";
                        break;
                    //En caso de que el simbolo ingresado sea un identificador, numero o una palabra
                    //reservada
                    case Identificador: case Numero: case Reservada:
                        result +=  "<"+ lexer.lexeme + ", " + tokens + ">\n";
                        break;
                    //En caso que no sea todo lo anterior, se establece que es un token
                    //y se obtiene el token especifico que es
                    default:
                        result += "<" + tokens + ", Token>\n";
                        break;
                }
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonAnalizarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAnalizar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelInput;
    private javax.swing.JLabel labelOutput;
    private javax.swing.JTextArea textAreaInput;
    private javax.swing.JTextArea textOutput;
    // End of variables declaration//GEN-END:variables
}
